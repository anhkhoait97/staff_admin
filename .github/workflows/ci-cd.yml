name: CI/CD for STAFF_ADMIN

on:
  push:
    branches: [staging]
    paths:
      - "src/**"
      - ".github/workflows/**"
      - "VnvcStaffAdmin.Application.csproj"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy ${{ matrix.service.name }}
    strategy:
      matrix:
        service:
          - name: staff
            dockerfile: ./src/VnvcStaffAdmin.WebApi/Dockerfile
            service_name: vnvc-staff-staff-api-stag
          - name: auth
            dockerfile: ./src/VnvcStaffAdmin.Authen/Dockerfile
            service_name: vnvc-staff-auth-api-stag
          - name: gateway
            dockerfile: ./src/VnvcStaffAdmin.Gateway/Dockerfile
            service_name: vnvc-staff-gateway-api-stag
    steps:
      - uses: actions/checkout@v4

      - name: Set time zone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Ho_Chi_Minh"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login to Harbor registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Set environment variables for Docker build
        run: |
          echo SERVICE_NAME="${{ matrix.service.service_name }}" >> $GITHUB_ENV
          echo URL_NAME="eplusapp/${{ matrix.service.service_name }}" >> $GITHUB_ENV
          # Use the short commit SHA as the version tag
          echo VERSION_TAG="${{ github.sha }}" >> $GITHUB_ENV

      - name: Set up Docker Cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ matrix.service.service_name }}-${{ env.VERSION_TAG }}
          restore-keys: |
            ${{ runner.os }}-docker-${{ matrix.service.service_name }}

      - name: Build and push Docker image with cache
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ secrets.REGISTRY_URL }}/${{ env.URL_NAME }}:${{ env.VERSION_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Deploy to server 1
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          port: ${{ secrets.STAGING_SSH_PORT_1 }}
          script: |
            echo 'Deploying ${{ env.SERVICE_NAME }}...'
            sed -i "5 s/${{ env.SERVICE_NAME }}.*/${{ env.SERVICE_NAME }}:${{ env.VERSION_TAG }}/g" "${{ vars.DOCKERCOMPOSE_DIR }}/${{ env.SERVICE_NAME }}/docker-compose.yml"
            docker compose -f "${{ vars.DOCKERCOMPOSE_DIR }}/${{ env.SERVICE_NAME }}/docker-compose.yml" up -d --force-recreate

      - name: Deploy to server 2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          port: ${{ secrets.STAGING_SSH_PORT_2 }}
          script: |
            echo 'Deploying ${{ env.SERVICE_NAME }}...'
            sed -i "5 s/${{ env.SERVICE_NAME }}.*/${{ env.SERVICE_NAME }}:${{ env.VERSION_TAG }}/g" "${{ vars.DOCKERCOMPOSE_DIR }}/${{ env.SERVICE_NAME }}/docker-compose.yml"
            docker compose -f "${{ vars.DOCKERCOMPOSE_DIR }}/${{ env.SERVICE_NAME }}/docker-compose.yml" up -d --force-recreate

      - name: Deploy to server 3
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          port: ${{ secrets.STAGING_SSH_PORT_3 }}
          script: |
            echo 'Deploying ${{ env.SERVICE_NAME }}...'
            sed -i "5 s/${{ env.SERVICE_NAME }}.*/${{ env.SERVICE_NAME }}:${{ env.VERSION_TAG }}/g" "${{ vars.DOCKERCOMPOSE_DIR }}/${{ env.SERVICE_NAME }}/docker-compose.yml"
            docker compose -f "${{ vars.DOCKERCOMPOSE_DIR }}/${{ env.SERVICE_NAME }}/docker-compose.yml" up -d --force-recreate
